#/******************************************************************************
# * Copyright (C) 2016-2019, Cris Cecka.  All rights reserved.
# * Copyright (C) 2016-2019, NVIDIA CORPORATION.  All rights reserved.
# *
# * Redistribution and use in source and binary forms, with or without
# * modification, are permitted provided that the following conditions are met:
# *     * Redistributions of source code must retain the above copyright
# *       notice, this list of conditions and the following disclaimer.
# *     * Redistributions in binary form must reproduce the above copyright
# *       notice, this list of conditions and the following disclaimer in the
# *       documentation and/or other materials provided with the distribution.
# *     * Neither the name of the NVIDIA CORPORATION nor the
# *       names of its contributors may be used to endorse or promote products
# *       derived from this software without specific prior written permission.
# *
# * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# * DISCLAIMED. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE FOR ANY
# * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# ******************************************************************************/

# BLAM with OpenBLAS https://github.com/xianyi/OpenBLAS
#
# caveat: must use recent openblas release (> 5 Nov 2017)
#         reason: requires void* for complex number arguments
#         https://github.com/xianyi/OpenBLAS/commit/66ac898f6441f0cb334f76d0c5603c37962bf368#diff-d23268747e861f1166acbfc56e8b2917
#
# Assumes Linux
#
# Create a symbolic link:
#     ln -s make.inc.openblas make.inc
#
# Optional: $OPENBLAS_PATH is set to where OpenBLAS is installed, e.g. in ~/.profile
#     export OPENBLASROOT=/home/XXX/local/OpenBLAS
#
# Optional: $OPENBLAS_INC is set to where OpenBLAS cblas.h exists, e.g., in ~/.profile
#     export OPENBLAS_INC=/home/XXX/local/OpenBLAS/include
#
# Optional: $OPENBLAS_LIB is set to where libopenblas exists, e.g., in ~/.profile
#     export OPENBLASLIB=/home/XXX/local/OpenBLAS/lib
#
# Then
#     make
# or alternatively (to force OPENBLAS_INC, OPENBLAS_LIB)
#     make OPENBLAS_LIB=/some/path OPENBLAS_INC=/some/path
#

CUDAROOT  ?= /usr/local/cuda
CUDA_INC  ?= ${CUDAROOT}/include
ifneq ($(wildcard ${CUDAROOT}/lib64/.*),)
      CUDA_LIB ?= ${CUDAROOT}/lib64
else
      CUDA_LIB ?= ${CUDAROOT}/lib
endif

CXX       = g++
NVCC      = nvcc

LDFLAGS   +=

CXXFLAGS  +=

NVCCFLAGS = -std=c++11 -arch=sm_70 -O3 --expt-extended-lambda

ifdef CUDA_INC
      CXXFLAGS  += -I${CUDA_INC}
			NVCCFLAGS += -I${CUDA_INC}
endif

ifdef CUDA_LIB
      LIBS += -L${CUDA_LIB}
endif

# note: -llapack is required for tests
LIBS +=  -lcublas -lcudart
